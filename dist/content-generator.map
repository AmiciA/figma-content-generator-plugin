{"version":3,"sources":["utilities.js","api.js","content-generator.js","index.js"],"names":["getRandom","arr","n","result","Array","len","length","taken","RangeError","x","Math","floor","random","getMenFaces","loadXHR","getWomenFaces","getPersons","count","getPersonsMale","getPersonsFemale","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onerror","onload","status","response","statusText","send","err","message","ContentGenerator","getRandomMenFaces","state","menFaces","then","fillMenFaces","selectedNodes","Object","keys","App","_state","mirror","sceneGraphSelection","faces","console","log","map","node","index","setTimeout","sendMessage","nodeIds","fillPaints","selectionProperties","addFillToSelectedLayer","currentFill","newFill","updateSelectionProperties","name","id","womenFaces","contentGeneratorPlugin","options","bind","window","figmaPlugin","createPluginsMenuItem","createContextMenuItem","Canvas","ObjectsPanel","contentGenerator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAMC,CAAN,EAAY;AACnC,MAAIC,MAAM,GAAG,IAAIC,KAAJ,CAAUF,CAAV,CAAb;AAAA,MACIG,GAAG,GAAGJ,GAAG,CAACK,MADd;AAAA,MAEIC,KAAK,GAAG,IAAIH,KAAJ,CAAUC,GAAV,CAFZ;AAGA,MAAIH,CAAC,GAAGG,GAAR,EACI,MAAM,IAAIG,UAAJ,CAAe,+CAAf,CAAN;;AACJ,SAAON,CAAC,EAAR,EAAY;AACR,QAAIO,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,GAA3B,CAAR;AACAF,IAAAA,MAAM,CAACD,CAAD,CAAN,GAAYD,GAAG,CAACQ,CAAC,IAAIF,KAAL,GAAaA,KAAK,CAACE,CAAD,CAAlB,GAAwBA,CAAzB,CAAf;AACAF,IAAAA,KAAK,CAACE,CAAD,CAAL,GAAW,EAAEJ,GAAF,IAASE,KAAT,GAAiBA,KAAK,CAACF,GAAD,CAAtB,GAA8BA,GAAzC;AACH;;AACD,SAAOF,MAAP;AACD,CAZM;;;;;;;;;;;ACAA,IAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAOC,OAAO,CAAC,sIAAD,CAAd;AACH,CAFM;;;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC/B,SAAOD,OAAO,CAAC,6EAAD,CAAd;AACH,CAFM;;;;AAIA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AACjC,SAAOH,OAAO,8CAAuCG,KAAvC,EAAd;AACH,CAFM;;;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACD,KAAD,EAAW;AACrC,SAAOH,OAAO,8CAAuCG,KAAvC,mBAAd;AACH,CAFM;;;;AAIA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,KAAD,EAAW;AACvC,SAAOH,OAAO,8CAAuCG,KAAvC,qBAAd;AACH,CAFM;;;;AAIP,SAASH,OAAT,CAAiBM,GAAjB,EAAsB;AAClB,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzC,QAAI;AACA,UAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,EAAgBN,GAAhB;AACAI,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB;;AACAH,MAAAA,GAAG,CAACI,OAAJ,GAAc,YAAW;AAACL,QAAAA,MAAM,CAAC,gBAAD,CAAN;AAAyB,OAAnD;;AACAC,MAAAA,GAAG,CAACK,MAAJ,GAAa,YAAW;AACpB,YAAIL,GAAG,CAACM,MAAJ,KAAe,GAAnB,EAAwB;AAACR,UAAAA,OAAO,CAACE,GAAG,CAACO,QAAL,CAAP;AAAsB,SAA/C,MACK;AAACR,UAAAA,MAAM,CAAC,mBAAmBC,GAAG,CAACQ,UAAxB,CAAN;AAA0C;AACnD,OAHD;;AAIAR,MAAAA,GAAG,CAACS,IAAJ;AACH,KAVD,CAWA,OAAMC,GAAN,EAAW;AAACX,MAAAA,MAAM,CAACW,GAAG,CAACC,OAAL,CAAN;AAAoB;AACnC,GAbM,CAAP;AAcH;;;;ACnCD;;AACA;;;;;;;;;;;;;;IAEMC,mBACJ,4BAAc;AAAA;;AAAA;;AAAA,OASdC,iBATc,GASM,UAACpB,KAAD,EAAW;AAC7B,WAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAG,KAAI,CAACe,KAAL,CAAWC,QAAX,CAAoBjC,MAApB,KAA+B,CAAlC,EAAqC;AACnC,gCAAckC,IAAd,CAAmB,UAACD,QAAD,EAAc;AAC/B,UAAA,KAAI,CAACD,KAAL,CAAWC,QAAX,GAAsBA,QAAtB;AACAjB,UAAAA,OAAO,CAAC,0BAAUiB,QAAV,EAAoBtB,KAApB,CAAD,CAAP;AACD,SAHD;AAID,OALD,MAMK;AACHK,QAAAA,OAAO,CAAC,0BAAU,KAAI,CAACgB,KAAL,CAAWC,QAArB,EAA+BtB,KAA/B,CAAD,CAAP;AACD;AACF,KAVM,CAAP;AAWD,GArBa;;AAAA,OAuBdwB,YAvBc,GAuBC,YAAM;AACnB,QAAMC,aAAa,GAAGC,MAAM,CAACC,IAAP,CAAYC,GAAG,CAACC,MAAJ,CAAWC,MAAX,CAAkBC,mBAA9B,CAAtB;;AAEA,QAAIN,aAAa,CAACpC,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,4BAAM,qCAAN;AACA;AACD;;AAED,IAAA,KAAI,CAAC+B,iBAAL,CAAuBK,aAAa,CAACpC,MAArC,EAA6CkC,IAA7C,CAAkD,UAAAS,KAAK,EAAI;AACzDC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,KAAxB;AACAP,MAAAA,aAAa,CAACU,GAAd,CAAkB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACjCC,QAAAA,UAAU,CAAC,YAAK;AACdV,UAAAA,GAAG,CAACW,WAAJ,CAAgB,gBAAhB;AACAX,UAAAA,GAAG,CAACW,WAAJ,CAAgB,gBAAhB,EAAkC;AAAEC,YAAAA,OAAO,EAAE,CAACJ,IAAD;AAAX,WAAlC;AACA,cAAMK,UAAU,GAAGb,GAAG,CAACC,MAAJ,CAAWC,MAAX,CAAkBY,mBAAlB,CAAsCD,UAAzD;;AACA,UAAA,KAAI,CAACE,sBAAL,CAA4BF,UAA5B,EAAwCT,KAAK,CAACK,KAAK,GAAG,EAAT,CAA7C;AACC,SALO,EAKL,OAAQA,KAAK,GAAG,GALX,CAAV;AAMD,OAPD;AAQD,KAVD;AAWD,GA1Ca;;AAAA,OA4CdM,sBA5Cc,GA4CW,UAACC,WAAD,EAAcC,OAAd,EAA0B;AACjDjB,IAAAA,GAAG,CAACkB,yBAAJ,CAA8B;AAC5BL,MAAAA,UAAU,qBAAMG,WAAN,UAAmBC,OAAnB;AADkB,KAA9B;AAGAjB,IAAAA,GAAG,CAACW,WAAJ,CAAgB,gBAAhB;AACD,GAjDa;;AACZ,OAAKQ,IAAL,GAAY,mBAAZ;AACA,OAAKC,EAAL,GAAU,kBAAV,EACA,KAAK3B,KAAL,GAAa;AACXC,IAAAA,QAAQ,EAAE,EADC;AAEX2B,IAAAA,UAAU,EAAE;AAFD,GADb;AAKD;;AA6CH,IAAMC,sBAAsB,GAAG,IAAI/B,gBAAJ,EAA/B;AAEA,IAAMgC,OAAO,GAAG,CACdD,sBAAsB,CAACH,IADT,EAEdG,sBAAsB,CAAC1B,YAAvB,CAAoC4B,IAApC,CAAyCF,sBAAzC,CAFc,CAAhB;;AAKA,uBAAAG,MAAM,CAACC,WAAP,EAAmBC,qBAAnB,4BAA4CJ,OAA5C;;AACA,yBAAAE,MAAM,CAACC,WAAP,CAAmBE,qBAAnB,EAAyCC,MAAzC,8BAAmDN,OAAnD;;AACA,0BAAAE,MAAM,CAACC,WAAP,CAAmBE,qBAAnB,EAAyCE,YAAzC,+BAAyDP,OAAzD;;;;;;;;;ACjEA;;;;eAEeQ","file":"content-generator.map","sourceRoot":"../src","sourcesContent":["export const getRandom = (arr, n) => {\n  var result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n  if (n > len)\n      throw new RangeError(\"getRandom: more elements taken than available\");\n  while (n--) {\n      var x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n  }\n  return result;\n}","export const getMenFaces = () => {\n    return loadXHR(\"https://gist.githubusercontent.com/cdes/3b320fe1c5048d6dc41eb002536595d2/raw/75613828bc85ab67fa0710a1636bbe906f467e82/men-faces.json\");\n}\n\nexport const getWomenFaces = () => {\n    return loadXHR(\"https://cdes.github.io/figma-content-generator-plugin/dist/women-faces.json\");\n}\n\nexport const getPersons = (count) => {\n    return loadXHR(`https://randomuser.me/api/?results=${count}`);\n}\n\nexport const getPersonsMale = (count) => {\n    return loadXHR(`https://randomuser.me/api/?results=${count}&?gender=male`);\n}\n\nexport const getPersonsFemale = (count) => {\n    return loadXHR(`https://randomuser.me/api/?results=${count}&?gender=female`);\n}\n\nfunction loadXHR(url) {\n    return new Promise(function(resolve, reject) {\n        try {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            xhr.responseType = \"json\";\n            xhr.onerror = function() {reject(\"Network error.\")};\n            xhr.onload = function() {\n                if (xhr.status === 200) {resolve(xhr.response)}\n                else {reject(\"Loading error:\" + xhr.statusText)}\n            };\n            xhr.send();\n        }\n        catch(err) {reject(err.message)}\n    });\n}\n","import { getRandom, toast } from \"./utilities\";\nimport { getMenFaces, getWomenFaces, getPersons, getPersonsMale, getPersonsFemale } from \"./api\";\n\nclass ContentGenerator {\n  constructor() {\n    this.name = 'Content Generator';\n    this.id = 'contentGenerator',\n    this.state = {\n      menFaces: [],\n      womenFaces: [],\n    }\n  }\n\n  getRandomMenFaces = (count) => {\n    return new Promise((resolve, reject) => {\n      if(this.state.menFaces.length === 0) {\n        getMenFaces().then((menFaces) => {\n          this.state.menFaces = menFaces;\n          resolve(getRandom(menFaces, count));\n        })\n      }\n      else {\n        resolve(getRandom(this.state.menFaces, count));\n      }\n    });\n  }\n\n  fillMenFaces = () => {\n    const selectedNodes = Object.keys(App._state.mirror.sceneGraphSelection);\n\n    if (selectedNodes.length === 0) {\n      toast('You must select at least one layer.');\n      return;\n    }\n\n    this.getRandomMenFaces(selectedNodes.length).then(faces => {\n      console.log(\"resolved\", faces);\n      selectedNodes.map((node, index) => {\n        setTimeout(()=> {\n          App.sendMessage('clearSelection');\n          App.sendMessage('addToSelection', { nodeIds: [node] });\n          const fillPaints = App._state.mirror.selectionProperties.fillPaints;\n          this.addFillToSelectedLayer(fillPaints, faces[index % 99]);\n          }, 1000 + (index * 250));\n      })\n    });\n  }\n  \n  addFillToSelectedLayer = (currentFill, newFill) => {  \n    App.updateSelectionProperties({\n      fillPaints: [...currentFill, newFill]\n    })\n    App.sendMessage('clearSelection');\n  }\n}\n\nconst contentGeneratorPlugin = new ContentGenerator();\n\nconst options = [\n  contentGeneratorPlugin.name,\n  contentGeneratorPlugin.fillMenFaces.bind(contentGeneratorPlugin)\n];\n\nwindow.figmaPlugin.createPluginsMenuItem(...options);\nwindow.figmaPlugin.createContextMenuItem.Canvas(...options);\nwindow.figmaPlugin.createContextMenuItem.ObjectsPanel(...options);","import contentGenerator from './content-generator';\n\nexport default contentGenerator;"]}